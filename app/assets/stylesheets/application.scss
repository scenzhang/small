/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 *= ./forms.scss
 */

// // CSS Reset
// @import "base/reset.scss";
span,
div {
    font-family: Roboto;
}

body {
    margin: 0;
}

ul {
    list-style: none;
    font-family: Roboto;
}

[class*='-button'] {
    border-radius: 5px;
    padding: 4px 12px;
    font-family: Roboto;
    height: 30px;
    width: fit-content;
    cursor: pointer;
}

.dark-button {
    background-color: rgb(3, 168, 124);
    border: 1px solid rgb(3, 168, 124);
    color: white;
}

.dark-button:hover {
    background-color: rgb(3, 155, 115);
}

button:disabled {
    background-color: rgba(10, 236, 176, 0.514);
    color: rgb(85, 84, 84);
    cursor: default;
}

.light-button {
    background-color: white;
    border: 1px solid rgb(3, 168, 124);
    color: rgb(3, 168, 124);
}

.no-color-button {
    background-color: white;
    border: 1px solid rgb(133, 132, 132);
    color: rgb(133, 132, 132);
}

a {
    text-decoration: none;
}
.greentext {
    color: rgb(3, 168, 124)
    
}
.light-button:hover {
    color: rgb(3, 155, 115);
    border: 1px solid rgb(3, 155, 115);
}

.serif {
    font-family: "Playfair Display";
}

.dropdown-toggle {
    cursor: pointer;
    fill: rgba(0, 0, 0, 0.50);
}

.dropdown-toggle:hover {
    fill: rgba(0, 0, 0, 0.85);
}

.hidden {
    display: none
}

//components
@import "components/*";
.app {
    height: 100%;
    min-height: 100vh;
}

body {
    height: 100%;
    min-height: 100vh;
}